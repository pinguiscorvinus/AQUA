import React from "react";

import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'

import {
  fetchMapmarks,
} from '../../actions/location/Location_Action'
import "leaflet/dist/leaflet.css";
import L from "leaflet";



// 參考資料 : https://leafletjs.com/examples/quick-start/ & https://juejin.im/post/5cc192976fb9a032092e8e0a

class map extends React.Component {
  
  componentDidMount() {
   this.props.fetchMapmarks()
    
    
  }
  componentDidUpdate(prevProps){
    if (this.props.mapmarksGCS !== prevProps.mapmarksGCS) {
      const mymap = L.map("mapid").setView([25.055049, 121.927245], 12);

      const OSMUrl = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";

      L.tileLayer(OSMUrl).addTo(mymap);

      // 使用 leaflet-color-markers ( https://github.com/pointhi/leaflet-color-markers ) 當作 marker
      const blueIcon = new L.Icon({
        iconUrl:
          "https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png",
        shadowUrl:
          "https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png",
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
      });
      const marksinfo = this.props.mapmarksGCS
      // console.log(marksinfo)
      marksinfo.forEach(function(marksinfo){
        L.marker([marksinfo.Latitude, marksinfo.Longitude], { icon: blueIcon }).addTo(mymap)
      });
      // const marker = L.marker([25.03418, 121.564517], { icon: blueIcon }).addTo(
      //   mymap
      // );

    // marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();

//     L.circle([25.03418, 121.564517], {
//       color: "red",
//       fillColor: "#f03",
//       fillOpacity: 0.5,
//       radius: 10
//     }).addTo(mymap);
    }
  }
  
  render() {

    return (
      <>
       <div id="mapid" className="divemap"></div>
     </>
    )
  }
}
// 取得Redux中store的值
const mapStateToProps = store => {
  return { mapmarksGCS: store.mapmarksGCS }
}

// 指示dispatch要綁定哪些action creators
const mapDispatchToProps = dispatch => {
  return bindActionCreators(
    { fetchMapmarks },
    dispatch
  )
}
export default connect(mapStateToProps,mapDispatchToProps)(map);
